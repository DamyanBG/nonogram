import { describe, it, expect } from 'vitest';
import NonogramHumanSolver from '../../src/modules/NonogramHumanSolver';

describe('NonogramHumanSolver', () => {
    it('5x5   Puzzle Solve', () => {
        const size = 5;
        const hints = {
            rows: [[1], [3], [5], [3], [1]],
            columns: [[1], [3], [5], [3], [1]],
        };
        const solution = [
            [2, 2, 1, 2, 2],
            [2, 1, 1, 1, 2],
            [1, 1, 1, 1, 1],
            [2, 1, 1, 1, 2],
            [2, 2, 1, 2, 2],
        ];
        const solver = new NonogramHumanSolver(size, hints, solution);

        expect(solver.solve()).toBe(true);
    });

    it('10x10 Puzzle Solve', () => {
        const size = 10;
        const hints = {
            rows: [[2, 4, 1], [10], [1, 1], [2, 2, 2], [1, 2], [1, 4], [2, 4, 2], [6, 1, 1], [1, 2, 2, 2], [3, 5]],
            columns: [
                [2, 1, 5],
                [2, 1, 2, 1],
                [1, 1, 3],
                [2, 1, 4],
                [2, 1, 3, 1],
                [2, 5],
                [3, 1, 1, 2],
                [1, 1, 1, 1],
                [2, 2, 1, 2],
                [2, 1, 3],
            ],
        };
        const solution = [
            [1, 1, 2, 1, 1, 1, 1, 2, 1, 2],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [2, 2, 2, 2, 2, 2, 1, 2, 2, 1],
            [1, 1, 2, 1, 1, 2, 2, 1, 1, 2],
            [2, 2, 2, 2, 2, 2, 1, 2, 1, 1],
            [1, 2, 1, 1, 1, 1, 2, 2, 2, 2],
            [1, 1, 2, 1, 1, 1, 1, 2, 1, 1],
            [1, 1, 1, 1, 1, 1, 2, 1, 2, 1],
            [1, 2, 1, 1, 2, 1, 1, 2, 1, 1],
            [1, 1, 1, 2, 1, 1, 1, 1, 1, 2],
        ];
        const solver = new NonogramHumanSolver(size, hints, solution);

        expect(solver.solve()).toBe(true);
    });
    it('10x10 Puzzle Solve 2', () => {
        const size = 10;
        const hints = {
            rows: [[6, 3], [3, 2, 1, 1], [3, 6], [3, 3, 2], [1, 1, 1, 2], [1, 8], [2, 1, 2], [1, 1, 1, 1], [6, 1], [7]],
            columns: [[8], [4, 1, 1], [4, 1, 2], [1, 2, 3], [4, 2, 2], [6, 2], [2, 5], [3, 2, 1], [1, 4, 2], [6, 1]],
        };
        const solution = [
            [1, 1, 1, 1, 1, 1, 2, 1, 1, 1],
            [1, 1, 1, 2, 1, 1, 2, 1, 2, 1],
            [1, 1, 1, 2, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 2, 1, 1, 1, 2, 1, 1],
            [1, 2, 2, 1, 2, 1, 2, 2, 1, 1],
            [1, 2, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 2, 2, 1, 2, 1, 1, 2, 2],
            [1, 2, 2, 1, 2, 2, 1, 2, 2, 1],
            [2, 1, 1, 1, 1, 1, 1, 2, 1, 2],
            [2, 2, 1, 1, 1, 1, 1, 1, 1, 2],
        ];
        const solver = new NonogramHumanSolver(size, hints, solution);

        expect(solver.solve()).toBe(true);
    });
    it('10x10 Puzzle Fail', () => {
        const size = 10;
        const hints = {
            rows: [[3, 4], [3, 2], [1, 3, 1], [6, 1], [8], [2, 3, 3], [3, 3, 2], [1, 3], [10], [7, 1]],
            columns: [
                [1, 3, 1],
                [7, 2],
                [2, 2, 4],
                [1, 4, 2],
                [5, 2],
                [7, 2],
                [2, 2, 4],
                [1, 2, 3],
                [1, 1, 4],
                [1, 2, 2],
            ],
        };
        const solution = [
            [2, 1, 1, 1, 2, 1, 1, 1, 1, 2],
            [1, 1, 1, 2, 2, 1, 1, 2, 2, 2],
            [2, 1, 2, 1, 1, 1, 2, 2, 1, 2],
            [2, 1, 1, 1, 1, 1, 1, 2, 2, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 2, 2],
            [1, 1, 2, 1, 1, 1, 2, 1, 1, 1],
            [1, 1, 1, 2, 1, 1, 1, 2, 1, 1],
            [2, 2, 1, 2, 2, 2, 1, 1, 1, 2],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [2, 1, 1, 1, 1, 1, 1, 1, 2, 1],
        ];

        const solver = new NonogramHumanSolver(size, hints, solution);
        expect(solver.solve()).toBe(false);
    });
    it('10x10 Puzzle Fail 2', () => {
        const size = 10;
        const hints = {
            rows: [[9], [8], [1, 2, 4], [3, 5], [3, 5], [1, 5, 2], [1, 3, 1], [3, 2], [1, 7], [1, 2, 1, 2]],
            columns: [[1, 3, 1], [5, 1], [2, 5], [4, 5], [3, 5], [2, 3, 1], [6, 2], [5, 1], [6, 3], [8]],
        };
        const solution = [
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
            [2, 1, 1, 1, 1, 1, 1, 1, 1, 2],
            [2, 1, 2, 1, 1, 2, 1, 1, 1, 1],
            [2, 1, 1, 1, 2, 1, 1, 1, 1, 1],
            [1, 1, 1, 2, 2, 1, 1, 1, 1, 1],
            [1, 2, 1, 1, 1, 1, 1, 2, 1, 1],
            [1, 2, 1, 1, 1, 2, 2, 2, 2, 1],
            [2, 2, 1, 1, 1, 2, 2, 2, 1, 1],
            [1, 2, 2, 1, 1, 1, 1, 1, 1, 1],
            [2, 1, 2, 1, 1, 2, 1, 2, 1, 1],
        ];
        const solver = new NonogramHumanSolver(size, hints, solution);
        expect(solver.solve()).toBe(false);
    });

    it('20x20 Puzzle Solve', () => {
        const size = 20;
        const hints = {
            rows: [
                [1, 2, 11, 3],
                [11, 6, 1],
                [2, 4, 1, 1, 2, 1],
                [2, 5, 7, 2],
                [5, 2, 1, 4, 1],
                [3, 1, 2, 2, 7],
                [4, 3, 1, 1, 6],
                [3, 12, 1],
                [4, 4, 1, 2, 2, 1],
                [1, 9, 3, 3],
                [3, 12, 1],
                [4, 1, 6, 3, 1],
                [1, 3, 1, 1, 6, 2],
                [1, 3, 10],
                [3, 1, 2, 3, 1, 1],
                [2, 4, 2, 8],
                [2, 1, 2, 3, 3],
                [1, 4, 4, 2, 2],
                [5, 2, 2, 2, 2, 1],
                [1, 3, 3, 8],
            ],
            columns: [
                [2, 4, 5, 3, 1],
                [1, 6, 2, 3, 2],
                [3, 8, 1, 2],
                [5, 4, 3, 2, 2],
                [1, 3, 1, 1, 2, 3],
                [2, 1, 3, 3, 1, 1, 1],
                [2, 1, 6, 1, 4],
                [15, 3],
                [3, 1, 6, 2, 1],
                [4, 1, 1, 4, 1, 3],
                [8, 3, 2, 4],
                [1, 1, 2, 8],
                [4, 3, 11],
                [2, 1, 1, 4, 2, 1, 2],
                [11, 2, 2, 1],
                [2, 5, 10],
                [2, 5, 4, 5],
                [3, 3, 4, 3, 1],
                [1, 1, 3, 1, 2, 1, 1, 1],
                [5, 1, 6, 3],
            ],
        };
        const solution = [
            [1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1],
            [2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1],
            [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1],
            [1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2],
            [1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1],
            [2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2],
            [1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1],
            [1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1],
            [1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1],
            [1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1],
            [2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2],
            [1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2],
            [1, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2],
            [2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1],
            [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 1],
            [2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],
        ];

        const solver = new NonogramHumanSolver(size, hints, solution);
        expect(solver.solve()).toBe(true);
    });
    it('20x20 Puzzle Fail', () => {
        const size = 20;
        const hints = {
            rows: [
                [1, 3, 11, 1],
                [10, 3, 4],
                [4, 1, 3, 3, 2],
                [7, 12],
                [5, 3, 8, 1],
                [7, 1, 2, 1, 5],
                [2, 1, 3, 2, 6],
                [11, 2, 2, 2],
                [3, 6, 1, 1, 3],
                [2, 4, 1, 1, 1],
                [1, 3, 1, 6, 4],
                [3, 1, 1, 2, 2, 2],
                [1, 2, 4, 2, 1],
                [5, 14],
                [4, 4, 3, 2, 2],
                [2, 4, 1, 2, 7],
                [1, 1, 5, 3, 3],
                [3, 3, 5, 4],
                [7, 2, 1, 3, 1],
                [3, 1, 6, 3, 1],
            ],
            columns: [
                [1, 6, 1, 3, 2],
                [2, 6, 9],
                [5, 2, 2, 2, 3],
                [8, 7, 2],
                [6, 4, 2, 2, 1],
                [4, 4, 1, 2, 3],
                [1, 6, 1, 3, 2],
                [2, 1, 3, 1, 2, 2],
                [6, 3, 4, 1],
                [2, 1, 8, 4],
                [1, 6, 5, 5],
                [6, 3, 6, 1],
                [5, 1, 1, 3, 3],
                [2, 3, 1, 2, 5, 1],
                [1, 3, 1, 1, 2, 1, 2],
                [8, 9],
                [11, 4, 3],
                [2, 4, 1, 1, 1, 5],
                [3, 7, 5],
                [1, 6, 7, 2],
            ],
        };
        const solution = [
            [2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2],
            [2, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1],
            [1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1],
            [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 2],
            [2, 2, 2, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2],
            [1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1],
            [2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 1],
            [2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1],
            [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1],
            [1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1],
            [2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1],
            [1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2],
            [1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1],
            [2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1],
        ];

        const solver = new NonogramHumanSolver(size, hints, solution);
        expect(solver.solve()).toBe(false);
    });

    it('25x25 Puzzle Solve', () => {
        const size = 25;
        const hints = {
            rows: [
                [1, 1, 8, 5, 3, 1],
                [1, 1, 1, 3, 1, 8],
                [3, 1, 1, 3, 3, 4, 1],
                [3, 3, 1, 4, 2, 3, 1],
                [2, 2, 4, 3, 3, 5],
                [13, 1, 4, 1],
                [3, 1, 1, 5, 4, 1, 4],
                [1, 1, 1, 4, 2, 3, 2, 2],
                [2, 8, 2, 4, 2],
                [1, 6, 1, 1, 1, 1, 2, 1],
                [1, 6, 1, 1, 7],
                [1, 5, 3, 7, 2],
                [11, 2, 1, 2, 1],
                [1, 4, 1, 1, 1, 1, 1, 3, 3],
                [4, 1, 2, 1, 5, 1],
                [1, 1, 3, 6, 7],
                [6, 11, 3, 1],
                [9, 4, 1, 1, 2, 2],
                [1, 3, 2, 1, 2, 11],
                [1, 4, 3, 2, 10],
                [3, 2, 4, 1, 1, 1],
                [4, 5, 1, 7, 3],
                [3, 1, 5, 3, 1, 1],
                [14, 3, 1],
                [2, 2, 2, 2, 6, 1, 2],
            ],
            columns: [
                [1, 4, 9, 2, 1, 2],
                [7, 1, 1, 2, 1, 2],
                [4, 2, 1, 4, 3, 2, 1],
                [1, 2, 3, 4, 9],
                [1, 4, 6, 6, 3],
                [2, 1, 1, 8, 2, 1, 3],
                [1, 2, 2, 5, 1, 3, 1, 1],
                [2, 2, 3, 7, 4],
                [1, 7, 1, 1, 4, 1, 1, 2],
                [2, 5, 4, 8],
                [10, 2, 1, 1, 2, 2],
                [4, 3, 1, 1, 4, 3],
                [5, 2, 1, 5, 4],
                [2, 2, 1, 4, 2, 2],
                [1, 1, 1, 6, 6, 2, 1],
                [4, 1, 2, 3, 4, 1],
                [1, 7, 1, 10, 1],
                [2, 1, 7, 1, 1, 2, 2, 1],
                [2, 2, 2, 4, 1, 8],
                [3, 2, 1, 2, 1, 1, 2, 1, 2],
                [6, 1, 3, 1, 5, 3],
                [11, 5, 1],
                [3, 1, 1, 1, 4, 2, 5],
                [1, 1, 2, 3, 3, 3, 1, 2],
                [8, 1, 7, 1],
            ],
        };
        const solution = [
            [1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1],
            [2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],
            [2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1],
            [1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1],
            [1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1],
            [2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1],
            [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2],
            [1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2],
            [1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2],
            [1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2],
            [1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1],
            [1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2],
            [1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1],
            [2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1],
            [1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1],
            [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1],
            [2, 2, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2],
            [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2],
            [1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1],
        ];
        const solver = new NonogramHumanSolver(size, hints, solution);
        expect(solver.solve()).toBe(true);
    });
    it('25x25 Puzzle Fail', () => {
        const size = 25;
        const hints = {
            rows: [
                [1, 4, 1, 1, 9],
                [2, 1, 6, 5, 3],
                [1, 6, 4, 2, 1],
                [1, 2, 9, 1, 3],
                [3, 2, 2, 2, 8],
                [3, 3, 4, 1, 2, 6],
                [5, 2, 1, 1, 2, 3, 1, 1],
                [1, 4, 4, 10],
                [7, 5, 2, 4],
                [7, 1, 3, 3, 4, 2],
                [1, 5, 3, 1, 3, 3],
                [2, 3, 3, 6, 1, 1],
                [3, 1, 1, 8, 7],
                [1, 6, 8, 1, 2],
                [4, 4, 3, 2, 6, 1],
                [3, 3, 5, 4, 1, 3],
                [2, 1, 1, 2, 1, 2, 4, 2],
                [3, 1, 3, 1, 2, 1, 5, 1],
                [1, 5, 4, 3, 1, 3, 1],
                [1, 18, 1, 1],
                [1, 1, 3, 1, 1, 2, 4, 2, 2],
                [3, 2, 1, 3, 5, 2],
                [1, 1, 2, 1, 3, 4, 1, 1],
                [2, 5, 4, 1, 6],
                [4, 6, 6, 1, 2],
            ],
            columns: [
                [1, 1, 1, 2, 9, 1],
                [2, 6, 1, 4, 4],
                [1, 4, 2, 2, 2, 2, 2, 1],
                [5, 4, 2, 1, 2, 1, 2],
                [2, 5, 2, 1, 4, 2],
                [1, 2, 1, 5, 4, 3, 2],
                [16, 4, 1],
                [9, 2, 2, 2, 1, 3],
                [4, 1, 11, 1],
                [1, 1, 1, 1, 3, 1, 2, 1, 1],
                [2, 1, 1, 1, 4, 7, 1, 1],
                [1, 13, 2, 1, 2],
                [4, 3, 4, 1, 2, 2],
                [1, 2, 1, 1, 3, 7],
                [2, 2, 3, 6, 2, 4],
                [2, 1, 11, 5, 1],
                [2, 3, 1, 1, 1, 1, 1, 2, 2],
                [2, 3, 2, 1, 4, 5, 1],
                [2, 1, 9, 2, 4, 1],
                [1, 5, 2, 1, 1, 4, 4],
                [2, 5, 2, 12],
                [6, 3, 1, 1, 2, 2, 2],
                [3, 5, 8, 1, 2],
                [1, 2, 4, 2, 2, 1, 2, 2],
                [1, 1, 3, 5, 2, 1, 6],
            ],
        };
        const solution = [
            [1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1],
            [2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2],
            [2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1],
            [1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 1, 1, 2, 2, 2],
            [2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],
            [2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1],
            [2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],
            [2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1],
            [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1],
            [1, 2, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1],
            [2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1],
            [1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1],
            [1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2],
            [1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1],
            [1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1],
            [1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2],
            [1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1],
            [1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2],
            [1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1],
            [1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1],
            [2, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1],
            [2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1],
            [1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1],
            [2, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1],
        ];
        const solver = new NonogramHumanSolver(size, hints, solution);
        expect(solver.solve()).toBe(false);
    });
});
